@startuml ERD
entity "Users" as U {
  + id : UUID [PK]
  --
  name : string
  email : string [UNIQUE]
  password : string
  role : enum(admin, user)
  created_at : timestamp
  updated_at : timestamp
}

entity "Cages" as C {
  + id : UUID [PK]
  --
  name : string
  user_id : UUID [FK -> Users.id]
  created_at : timestamp
  updated_at : timestamp
}

entity "Sensors" as S {
  + id : UUID [PK]
  --
  name : string
  type : enum(temperature, humidity, light, distance, weight)
  value : float
  unit : string
  cage_id : UUID [FK -> Cages.id]
  created_at : timestamp
}

entity "Devices" as D {
  + id : UUID [PK]
  --
  name : string
  type : enum(display, lock, light, pump, fan)
  status : enum(on, off, auto)
  cage_id : UUID [FK -> Cages.id]
  created_at : timestamp
  updated_at : timestamp
}

entity "AutomationRules" as AR {
  + id : UUID [PK]
  --
  sensor_id : UUID [FK -> Sensors.id]
  device_id : UUID [FK -> Devices.id]
  condition : enum(>, <, =, >=, <=)
  threshold : float
  action : enum(turn_on, turn_off)
  created_at : timestamp
}

entity "Notifications" as N {
  + id : UUID [PK]
  --
  message : string
  user_id : UUID [FK -> Users.id]
  created_at : timestamp
}

U ||--o{ C : "owns"
C ||--o{ S : "has"
C ||--o{ D : "has"
S ||--o{ AR : "triggers"
D ||--o{ AR : "controlled by"
U ||--o{ N : "receives"
@enduml
